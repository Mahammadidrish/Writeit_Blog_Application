{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mahammad Idrish\\\\Desktop\\\\BlogAPP\\\\Write-It-Blog-Application\\\\writeit-frontend\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport JoditEditor from \"jodit-react\";\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button, Container, FormText } from \"reactstrap\";\nimport BaseComponent from \"../components/BaseComponent\";\nimport { LoadPostByPostIdFunc, UpdatePostFunc } from \"../services/post-service\";\nimport { LoadAllCategoriesFunc } from \"../services/category-service\";\nimport UserContext from \"../context/UserContext\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditPost() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userState\n  } = useContext(UserContext);\n  const [categories, setCategories] = useState([]);\n  const [stateData, setStateData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [postData, setPostData] = useState(null);\n  const {\n    postid\n  } = useParams();\n  const textAreaEditor = useRef(null);\n  useEffect(() => {\n    LoadAllCategoriesFunc().then(data => {\n      setCategories([...data]);\n    }).catch(error => {\n      console.log(error);\n    });\n    LoadPostByPostIdFunc(postid).then(data => {\n      console.log(data);\n      setPostData({\n        ...data\n      });\n      setStateData({\n        title: data.title,\n        content: data.content\n      });\n    }).catch(error => {\n      toast.error(\"Not Able To Load The Post\");\n      navigate(`/user/${userState.data.username}/addpost`);\n    });\n  }, []);\n  useEffect(() => {\n    if (postData != null) {\n      if (postData.user.uid !== userState.data.uid) {\n        toast.error(\"This is not your post!!\");\n        navigate(`/user/${userState.data.username}/addpost`);\n      }\n    }\n  }, [postData]);\n  function handleChange(event) {\n    if (event !== null && event !== void 0 && event.target) setStateData({\n      ...stateData,\n      [event.target.name]: event.target.value\n    });else setStateData({\n      ...stateData,\n      content: event\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (stateData.content === '' || stateData.title === '') {\n      toast.error(\"Fields cannot be empty\");\n      return;\n    }\n    UpdatePostFunc({\n      ...stateData\n    }, userState.data.username, postid).then(response => {\n      //console.log(response.data);\n      toast.success(\"Post Updated Successfully!!\");\n      navigate(`/user/${userState.data.username}/addpost`);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(BaseComponent, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EditPost container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 offset-md-1\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"my-2 shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Edit Your Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"title\",\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"title\",\n                    name: \"title\",\n                    placeholder: \"Enter Post Title\",\n                    type: \"text\",\n                    value: stateData.title,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"content\",\n                    children: \"Content\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(JoditEditor, {\n                    ref: textAreaEditor,\n                    value: stateData.content,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-sm btn-danger\",\n                    children: \"Update Post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"dvlQR/oeA1RNcK3P8Y6Vhf7+yBY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","useNavigate","useParams","JoditEditor","Card","CardHeader","CardBody","Form","FormGroup","Label","Input","Button","Container","FormText","BaseComponent","LoadPostByPostIdFunc","UpdatePostFunc","LoadAllCategoriesFunc","UserContext","toast","jsxDEV","_jsxDEV","EditPost","_s","navigate","userState","categories","setCategories","stateData","setStateData","title","content","postData","setPostData","postid","textAreaEditor","then","data","catch","error","console","log","username","user","uid","handleChange","event","target","name","value","handleSubmit","preventDefault","response","success","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","id","placeholder","type","onChange","ref","_c","$RefreshReg$"],"sources":["C:/Users/Mahammad Idrish/Desktop/BlogAPP/Write-It-Blog-Application/writeit-frontend/src/pages/EditPost.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport JoditEditor from \"jodit-react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Container,\n  FormText,\n} from \"reactstrap\";\nimport BaseComponent from \"../components/BaseComponent\";\nimport { LoadPostByPostIdFunc, UpdatePostFunc } from \"../services/post-service\";\nimport { LoadAllCategoriesFunc } from \"../services/category-service\";\nimport UserContext from \"../context/UserContext\";\nimport { toast } from \"react-toastify\";\n\nfunction EditPost() {\n  const navigate = useNavigate();\n  const { userState } = useContext(UserContext);\n  const [categories, setCategories] = useState([]);\n  const [stateData, setStateData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [postData, setPostData] = useState(null);\n  const { postid } = useParams();\n\n  const textAreaEditor = useRef(null);\n  useEffect(() => {\n    LoadAllCategoriesFunc()\n      .then((data) => {\n        setCategories([...data]);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    LoadPostByPostIdFunc(postid)\n      .then((data) => {\n        console.log(data);\n        setPostData({ ...data });\n        setStateData({\n          title: data.title,\n          content: data.content,\n        });\n      })\n      .catch((error) => {\n        toast.error(\"Not Able To Load The Post\");\n        navigate(`/user/${userState.data.username}/addpost`);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (postData != null) {\n      if (postData.user.uid !== userState.data.uid) {\n        toast.error(\"This is not your post!!\");\n        navigate(`/user/${userState.data.username}/addpost`);\n      }\n    }\n  }, [postData]);\n\n  function handleChange(event) {\n    if (event?.target)\n      setStateData({ ...stateData, [event.target.name]: event.target.value });\n    else setStateData({ ...stateData, content: event });\n  }\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if(stateData.content==='' || stateData.title===''){\n        toast.error(\"Fields cannot be empty\");\n        return;\n    }\n    UpdatePostFunc({...stateData},userState.data.username,postid).then((response)=>{\n        //console.log(response.data);\n        toast.success(\"Post Updated Successfully!!\")\n        navigate(`/user/${userState.data.username}/addpost`)\n    }).catch((error)=>{\n        console.log(error)\n    });\n  }\n  return (\n    <BaseComponent>\n      <div className=\"EditPost container\">\n        <div className=\"row\">\n          <div className=\"col-md-10 offset-md-1\">\n            <Card className=\"my-2 shadow\">\n              <CardHeader className=\"text-center\">\n                <h3>Edit Your Post</h3>\n              </CardHeader>\n              <CardBody>\n                <Form onSubmit={handleSubmit}>\n                  <FormGroup>\n                    <Label for=\"title\">Title</Label>\n                    <Input\n                      id=\"title\"\n                      name=\"title\"\n                      placeholder=\"Enter Post Title\"\n                      type=\"text\"\n                      value={stateData.title}\n                      onChange={handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"content\">Content</Label>\n                    <JoditEditor\n                      ref={textAreaEditor}\n                      value={stateData.content}\n                      onChange={handleChange}\n                    />\n                  </FormGroup>\n                  <Container className=\"text-center\">\n                    <Button className=\"btn btn-sm btn-danger\">Update Post</Button>\n                  </Container>\n                </Form>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </BaseComponent>\n  );\n}\n\nexport default EditPost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}